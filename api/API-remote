#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.12.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from api import API
from api.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  WalletDataGetResult WalletDataGet(Address address)')
    print('  WalletIdGetResult WalletIdGet(Address address)')
    print('  WalletTransactionsCountGetResult WalletTransactionsCountGet(Address address)')
    print('  WalletBalanceGetResult WalletBalanceGet(Address address)')
    print('  TransactionGetResult TransactionGet(TransactionId transactionId)')
    print('  TransactionsGetResult TransactionsGet(Address address, i64 offset, i64 limit)')
    print('  TransactionFlowResult TransactionFlow(Transaction transaction)')
    print('  TransactionsGetResult TransactionsListGet(i64 offset, i64 limit)')
    print('  PoolHash GetLastHash()')
    print('  PoolListGetResult PoolListGetStable(PoolHash hash, i64 limit)')
    print('  PoolListGetResult PoolListGet(i64 offset, i64 limit)')
    print('  PoolInfoGetResult PoolInfoGet(PoolHash hash, i64 index)')
    print('  PoolTransactionsGetResult PoolTransactionsGet(PoolHash hash, i64 offset, i64 limit)')
    print('  StatsGetResult StatsGet()')
    print('  SmartContractGetResult SmartContractGet(Address address)')
    print('  SmartContractsListGetResult SmartContractsListGet(Address deployer)')
    print('  SmartContractAddressesListGetResult SmartContractAddressesListGet(Address deployer)')
    print('  PoolHash WaitForBlock(PoolHash obsolete)')
    print('  TransactionId WaitForSmartTransaction(Address smart_public)')
    print('  SmartContractsListGetResult SmartContractsAllListGet(i64 offset, i64 limit)')
    print('  TransactionsStateGetResult TransactionsStateGet(Address address,  id)')
    print('  ContractAllMethodsGetResult ContractAllMethodsGet( byteCodeObjects)')
    print('  SmartMethodParamsGetResult SmartMethodParamsGet(Address address, TransactionInnerId id)')
    print('  SmartContractDataResult SmartContractDataGet(Address address)')
    print('  SmartContractCompileResult SmartContractCompile(string sourceCode)')
    print('  TokenBalancesResult TokenBalancesGet(Address address)')
    print('  TokenTransfersResult TokenTransfersGet(Address token, i64 offset, i64 limit)')
    print('  TokenTransfersResult TokenTransferGet(Address token, TransactionId id)')
    print('  TokenTransfersResult TokenTransfersListGet(i64 offset, i64 limit)')
    print('  TokenTransfersResult TokenWalletTransfersGet(Address token, Address address, i64 offset, i64 limit)')
    print('  TokenTransactionsResult TokenTransactionsGet(Address token, i64 offset, i64 limit)')
    print('  TokenInfoResult TokenInfoGet(Address token)')
    print('  TokenHoldersResult TokenHoldersGet(Address token, i64 offset, i64 limit, TokenHoldersSortField order, bool desc)')
    print('  TokensListResult TokensListGet(i64 offset, i64 limit, TokensListSortField order, bool desc)')
    print('  WalletsGetResult WalletsGet(i64 offset, i64 limit, i8 ordCol, bool desc)')
    print('  TrustedGetResult TrustedGet(i32 page)')
    print('  SyncStateResult SyncStateGet()')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = API.Client(protocol)
transport.open()

if cmd == 'WalletDataGet':
    if len(args) != 1:
        print('WalletDataGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.WalletDataGet(eval(args[0]),))

elif cmd == 'WalletIdGet':
    if len(args) != 1:
        print('WalletIdGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.WalletIdGet(eval(args[0]),))

elif cmd == 'WalletTransactionsCountGet':
    if len(args) != 1:
        print('WalletTransactionsCountGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.WalletTransactionsCountGet(eval(args[0]),))

elif cmd == 'WalletBalanceGet':
    if len(args) != 1:
        print('WalletBalanceGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.WalletBalanceGet(eval(args[0]),))

elif cmd == 'TransactionGet':
    if len(args) != 1:
        print('TransactionGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.TransactionGet(eval(args[0]),))

elif cmd == 'TransactionsGet':
    if len(args) != 3:
        print('TransactionsGet requires 3 args')
        sys.exit(1)
    pp.pprint(client.TransactionsGet(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'TransactionFlow':
    if len(args) != 1:
        print('TransactionFlow requires 1 args')
        sys.exit(1)
    pp.pprint(client.TransactionFlow(eval(args[0]),))

elif cmd == 'TransactionsListGet':
    if len(args) != 2:
        print('TransactionsListGet requires 2 args')
        sys.exit(1)
    pp.pprint(client.TransactionsListGet(eval(args[0]), eval(args[1]),))

elif cmd == 'GetLastHash':
    if len(args) != 0:
        print('GetLastHash requires 0 args')
        sys.exit(1)
    pp.pprint(client.GetLastHash())

elif cmd == 'PoolListGetStable':
    if len(args) != 2:
        print('PoolListGetStable requires 2 args')
        sys.exit(1)
    pp.pprint(client.PoolListGetStable(eval(args[0]), eval(args[1]),))

elif cmd == 'PoolListGet':
    if len(args) != 2:
        print('PoolListGet requires 2 args')
        sys.exit(1)
    pp.pprint(client.PoolListGet(eval(args[0]), eval(args[1]),))

elif cmd == 'PoolInfoGet':
    if len(args) != 2:
        print('PoolInfoGet requires 2 args')
        sys.exit(1)
    pp.pprint(client.PoolInfoGet(eval(args[0]), eval(args[1]),))

elif cmd == 'PoolTransactionsGet':
    if len(args) != 3:
        print('PoolTransactionsGet requires 3 args')
        sys.exit(1)
    pp.pprint(client.PoolTransactionsGet(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'StatsGet':
    if len(args) != 0:
        print('StatsGet requires 0 args')
        sys.exit(1)
    pp.pprint(client.StatsGet())

elif cmd == 'SmartContractGet':
    if len(args) != 1:
        print('SmartContractGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.SmartContractGet(eval(args[0]),))

elif cmd == 'SmartContractsListGet':
    if len(args) != 1:
        print('SmartContractsListGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.SmartContractsListGet(eval(args[0]),))

elif cmd == 'SmartContractAddressesListGet':
    if len(args) != 1:
        print('SmartContractAddressesListGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.SmartContractAddressesListGet(eval(args[0]),))

elif cmd == 'WaitForBlock':
    if len(args) != 1:
        print('WaitForBlock requires 1 args')
        sys.exit(1)
    pp.pprint(client.WaitForBlock(eval(args[0]),))

elif cmd == 'WaitForSmartTransaction':
    if len(args) != 1:
        print('WaitForSmartTransaction requires 1 args')
        sys.exit(1)
    pp.pprint(client.WaitForSmartTransaction(eval(args[0]),))

elif cmd == 'SmartContractsAllListGet':
    if len(args) != 2:
        print('SmartContractsAllListGet requires 2 args')
        sys.exit(1)
    pp.pprint(client.SmartContractsAllListGet(eval(args[0]), eval(args[1]),))

elif cmd == 'TransactionsStateGet':
    if len(args) != 2:
        print('TransactionsStateGet requires 2 args')
        sys.exit(1)
    pp.pprint(client.TransactionsStateGet(eval(args[0]), eval(args[1]),))

elif cmd == 'ContractAllMethodsGet':
    if len(args) != 1:
        print('ContractAllMethodsGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.ContractAllMethodsGet(eval(args[0]),))

elif cmd == 'SmartMethodParamsGet':
    if len(args) != 2:
        print('SmartMethodParamsGet requires 2 args')
        sys.exit(1)
    pp.pprint(client.SmartMethodParamsGet(eval(args[0]), eval(args[1]),))

elif cmd == 'SmartContractDataGet':
    if len(args) != 1:
        print('SmartContractDataGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.SmartContractDataGet(eval(args[0]),))

elif cmd == 'SmartContractCompile':
    if len(args) != 1:
        print('SmartContractCompile requires 1 args')
        sys.exit(1)
    pp.pprint(client.SmartContractCompile(args[0],))

elif cmd == 'TokenBalancesGet':
    if len(args) != 1:
        print('TokenBalancesGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.TokenBalancesGet(eval(args[0]),))

elif cmd == 'TokenTransfersGet':
    if len(args) != 3:
        print('TokenTransfersGet requires 3 args')
        sys.exit(1)
    pp.pprint(client.TokenTransfersGet(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'TokenTransferGet':
    if len(args) != 2:
        print('TokenTransferGet requires 2 args')
        sys.exit(1)
    pp.pprint(client.TokenTransferGet(eval(args[0]), eval(args[1]),))

elif cmd == 'TokenTransfersListGet':
    if len(args) != 2:
        print('TokenTransfersListGet requires 2 args')
        sys.exit(1)
    pp.pprint(client.TokenTransfersListGet(eval(args[0]), eval(args[1]),))

elif cmd == 'TokenWalletTransfersGet':
    if len(args) != 4:
        print('TokenWalletTransfersGet requires 4 args')
        sys.exit(1)
    pp.pprint(client.TokenWalletTransfersGet(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 'TokenTransactionsGet':
    if len(args) != 3:
        print('TokenTransactionsGet requires 3 args')
        sys.exit(1)
    pp.pprint(client.TokenTransactionsGet(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'TokenInfoGet':
    if len(args) != 1:
        print('TokenInfoGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.TokenInfoGet(eval(args[0]),))

elif cmd == 'TokenHoldersGet':
    if len(args) != 5:
        print('TokenHoldersGet requires 5 args')
        sys.exit(1)
    pp.pprint(client.TokenHoldersGet(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]),))

elif cmd == 'TokensListGet':
    if len(args) != 4:
        print('TokensListGet requires 4 args')
        sys.exit(1)
    pp.pprint(client.TokensListGet(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 'WalletsGet':
    if len(args) != 4:
        print('WalletsGet requires 4 args')
        sys.exit(1)
    pp.pprint(client.WalletsGet(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]),))

elif cmd == 'TrustedGet':
    if len(args) != 1:
        print('TrustedGet requires 1 args')
        sys.exit(1)
    pp.pprint(client.TrustedGet(eval(args[0]),))

elif cmd == 'SyncStateGet':
    if len(args) != 0:
        print('SyncStateGet requires 0 args')
        sys.exit(1)
    pp.pprint(client.SyncStateGet())

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
